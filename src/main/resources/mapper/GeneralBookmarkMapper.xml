<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heng.reading.apiservice.mapper.GeneralBookmarkMapper">
  <resultMap id="BaseResultMap" type="com.heng.reading.apiservice.entity.GeneralBookmark">
    <!--@mbg.generated-->
    <!--@Table general_bookmark-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="bookmark_title" jdbcType="VARCHAR" property="bookmarkTitle" />
    <result column="bookmark_created_time" jdbcType="VARCHAR" property="bookmarkCreatedTime" />
    <result column="bookmark_location_index" jdbcType="LONGVARCHAR" property="bookmarkLocationIndex" />
    <result column="bookmark_location_content" jdbcType="LONGVARCHAR" property="bookmarkLocationContent" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, bookmark_title, bookmark_created_time, bookmark_location_index, bookmark_location_content
  </sql>

  <select id="queryBookmarksByBookId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT id, bookmark_title, bookmark_created_time, bookmark_location_index, bookmark_location_content
    FROM general_bookmark
    WHERE id IN  (SELECT bookmark_id FROM book_bookmark_index WHERE book_id = #{bookId}) ORDER BY bookmark_created_time DESC
  </select>

  <delete id="deleteByBookId" parameterType="java.lang.String">
    DELETE FROM general_bookmark WHERE id IN (SELECT bookmark_id FROM book_bookmark_index WHERE book_id = #{bookId})
  </delete>
</mapper>